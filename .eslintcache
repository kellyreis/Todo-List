[{"C:\\balta\\app-react\\todo\\src\\index.tsx":"1","C:\\balta\\app-react\\todo\\src\\reportWebVitals.ts":"2","C:\\balta\\app-react\\todo\\src\\components\\App.tsx":"3","C:\\balta\\app-react\\todo\\src\\components\\NavBar.tsx":"4","C:\\balta\\app-react\\todo\\src\\components\\Todolist.tsx":"5","C:\\balta\\app-react\\todo\\src\\components\\TodoListItens.tsx":"6","C:\\balta\\app-react\\todo\\src\\contexts\\TodoContext.tsx":"7","C:\\balta\\app-react\\todo\\src\\services\\TodoService..tsx":"8","C:\\balta\\app-react\\todo\\src\\components\\AddTodo.tsx":"9"},{"size":489,"mtime":1611789300526,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1611787951149,"results":"12","hashOfConfig":"11"},{"size":662,"mtime":1611878746557,"results":"13","hashOfConfig":"11"},{"size":499,"mtime":1611878701036,"results":"14","hashOfConfig":"11"},{"size":819,"mtime":1611876105879,"results":"15","hashOfConfig":"11"},{"size":1171,"mtime":1611876334866,"results":"16","hashOfConfig":"11"},{"size":1196,"mtime":1611877706636,"results":"17","hashOfConfig":"11"},{"size":415,"mtime":1611876662015,"results":"18","hashOfConfig":"11"},{"size":1377,"mtime":1611879574311,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"sxd7da",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\balta\\app-react\\todo\\src\\index.tsx",[],["42","43"],"C:\\balta\\app-react\\todo\\src\\reportWebVitals.ts",[],"C:\\balta\\app-react\\todo\\src\\components\\App.tsx",[],"C:\\balta\\app-react\\todo\\src\\components\\NavBar.tsx",["44"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () =>{\r\n  return (\r\n\r\n  <div className=\"uk-container\"> \r\n <nav className=\"uk-navbar\">\r\n<div className=\"uk-navbar-left\">\r\n<Link href=\"#\" className=\"uk-navbar-item uklogo\">My Todo</Link>\r\n</div>\r\n<div className=\"uk-navbar-right\">\r\n<ul className=\"uk-navbar-nav\">\r\n<li>\r\n<a href=\"#\">\r\n<span uk-icon=\"icon: plus;ration:1.2\"></span>\r\n\r\n</a>\r\n</li>\r\n\r\n</ul>\r\n</div>\r\n </nav>\r\n  </div>\r\n\r\n  );\r\n}\r\nexport default NavBar;","C:\\balta\\app-react\\todo\\src\\components\\Todolist.tsx",[],"C:\\balta\\app-react\\todo\\src\\components\\TodoListItens.tsx",[],"C:\\balta\\app-react\\todo\\src\\contexts\\TodoContext.tsx",["45"],"import { title } from 'process';\r\nimport React, { createContext, useEffect, useState } from 'react';\r\nimport { Todo } from '../Models/Todo';\r\nimport { get , save} from '../services/TodoService.';\r\nimport { TodoContextType } from './TodoContextType';\r\n\r\nexport const TodoContext = createContext<TodoContextType>({\r\n  todos:[   \r\n   \r\n],\r\n  addTodo:() =>{},\r\n  removeTodo:()=>{},\r\n  toggle:() =>{},\r\n});\r\n\r\nconst TodoProvider  = (props: any) =>{\r\n\r\n const [todos,setTodos] = useState<Todo[]>(get);\r\n \r\n useEffect(() =>{\r\n   save(todos);\r\n },[todos]);\r\n\r\n  const addTodo = (title:string) =>{\r\n    const todo: Todo = {\r\n      id:todos.length + 1,\r\n       title:title,\r\n       done:false\r\n      };\r\n      setTodos([...todos,todo]);\r\n\r\n  }\r\n\r\n  const removeTodo = (todo:Todo) =>{\r\n    const index = todos.indexOf(todo);\r\n    setTodos(todos.filter((_,i) => i!== index));\r\n\r\n  }\r\n\r\n  const toggle = (todo:Todo) =>{\r\n\r\n    const index = todos.indexOf(todo);\r\n    todos[index].done = !todo.done;\r\n    setTodos([...todos]);\r\n  \r\n  }\r\n\r\nreturn(\r\n  <TodoContext.Provider value={{\r\n    todos,addTodo,removeTodo,toggle\r\n  }}>\r\n    {props.children}\r\n  </TodoContext.Provider>\r\n);\r\n}\r\nexport default TodoProvider;","C:\\balta\\app-react\\todo\\src\\services\\TodoService..tsx",[],["46","47"],"C:\\balta\\app-react\\todo\\src\\components\\AddTodo.tsx",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":15,"column":1,"nodeType":"55","endLine":15,"endColumn":13},{"ruleId":"56","severity":1,"message":"57","line":1,"column":10,"nodeType":"58","messageId":"59","endLine":1,"endColumn":15},{"ruleId":"49","replacedBy":"60"},{"ruleId":"51","replacedBy":"61"},{"ruleId":null,"fatal":true,"severity":2,"message":"62","line":11,"column":46},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'title' is defined but never used.","Identifier","unusedVar",["63"],["64"],"Parsing error: ',' expected.","no-global-assign","no-unsafe-negation"]