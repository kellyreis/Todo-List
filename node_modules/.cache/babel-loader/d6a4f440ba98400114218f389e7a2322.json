{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\balta\\\\app-react\\\\todo\\\\src\\\\contexts\\\\TodoContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nexport const TodoContext = /*#__PURE__*/createContext({\n  todos: [],\n  addTodo: () => {},\n  removeTodo: () => {},\n  toggle: () => {}\n});\n\nconst TodoProvider = props => {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    title: 'a',\n    done: true\n  }, {\n    id: 2,\n    title: 'b',\n    done: false\n  }]);\n\n  const addTodo = title => {\n    const todo = {\n      id: todos.length + 1,\n      title: title,\n      done: false\n    };\n    setTodos([...todos, todo]);\n  };\n\n  const removeTodo = todo => {\n    const index = todos.indexOf(todo);\n    setTodos(todos.filter((_, i) => i !== index));\n  };\n\n  const toggle = todo => {\n    const index = todos.indexOf(todo);\n    todos[index].done = !todo.done;\n    setTodos([...todos]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      todos,\n      addTodo,\n      removeTodo,\n      toggle\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoProvider, \"RzRdWVik/gcf3J/gRNQHZqhjLiE=\");\n\n_c = TodoProvider;\nexport default TodoProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["C:/balta/app-react/todo/src/contexts/TodoContext.tsx"],"names":["React","createContext","useState","TodoContext","todos","addTodo","removeTodo","toggle","TodoProvider","props","setTodos","id","title","done","todo","length","index","indexOf","filter","_","i","children"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAKA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAkB;AACxDG,EAAAA,KAAK,EAAC,EADkD;AAIxDC,EAAAA,OAAO,EAAC,MAAK,CAAE,CAJyC;AAKxDC,EAAAA,UAAU,EAAC,MAAI,CAAE,CALuC;AAMxDC,EAAAA,MAAM,EAAC,MAAK,CAAE;AAN0C,CAAlB,CAAjC;;AASP,MAAMC,YAAY,GAAKC,KAAD,IAAe;AAAA;;AAEnC,QAAM,CAACL,KAAD,EAAOM,QAAP,IAAmBR,QAAQ,CAAS,CACxC;AAACS,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,GAAZ;AAAgBC,IAAAA,IAAI,EAAC;AAArB,GADwC,EAExC;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,GAAZ;AAAgBC,IAAAA,IAAI,EAAC;AAArB,GAFwC,CAAT,CAAjC;;AAKA,QAAMR,OAAO,GAAIO,KAAD,IAAiB;AAE/B,UAAME,IAAU,GAAG;AACjBH,MAAAA,EAAE,EAACP,KAAK,CAACW,MAAN,GAAe,CADD;AAEhBH,MAAAA,KAAK,EAACA,KAFU;AAGhBC,MAAAA,IAAI,EAAC;AAHW,KAAnB;AAKEH,IAAAA,QAAQ,CAAC,CAAC,GAAGN,KAAJ,EAAUU,IAAV,CAAD,CAAR;AACH,GARD;;AAUA,QAAMR,UAAU,GAAIQ,IAAD,IAAc;AAC/B,UAAME,KAAK,GAAGZ,KAAK,CAACa,OAAN,CAAcH,IAAd,CAAd;AACAJ,IAAAA,QAAQ,CAACN,KAAK,CAACc,MAAN,CAAa,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,KAAIJ,KAA3B,CAAD,CAAR;AACD,GAHD;;AAKA,QAAMT,MAAM,GAAIO,IAAD,IAAc;AAE3B,UAAME,KAAK,GAAGZ,KAAK,CAACa,OAAN,CAAcH,IAAd,CAAd;AACAV,IAAAA,KAAK,CAACY,KAAD,CAAL,CAAaH,IAAb,GAAoB,CAACC,IAAI,CAACD,IAA1B;AACAH,IAAAA,QAAQ,CAAC,CAAC,GAAGN,KAAJ,CAAD,CAAR;AACD,GALD;;AAOF,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAC3BA,MAAAA,KAD2B;AACrBC,MAAAA,OADqB;AACbC,MAAAA,UADa;AACFC,MAAAA;AADE,KAA7B;AAAA,cAGGE,KAAK,CAACY;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOC,CApCD;;GAAMb,Y;;KAAAA,Y;AAqCN,eAAeA,YAAf","sourcesContent":["import { title } from 'process';\r\nimport React, { createContext, useState } from 'react';\r\nimport { Todo } from '../Models/Todo';\r\nimport { get } from '../services/TodoService.';\r\nimport { TodoContextType } from './TodoContextType';\r\n\r\nexport const TodoContext = createContext<TodoContextType>({\r\n  todos:[   \r\n   \r\n],\r\n  addTodo:() =>{},\r\n  removeTodo:()=>{},\r\n  toggle:() =>{},\r\n});\r\n\r\nconst TodoProvider  = (props: any) =>{\r\n\r\n  const [todos,setTodos] = useState<Todo[]>([\r\n    {id:1,title:'a',done:true},\r\n    {id:2,title:'b',done:false},\r\n  ]);\r\n\r\n  const addTodo = (title:string) =>{\r\n\r\n    const todo: Todo = {\r\n      id:todos.length + 1,\r\n       title:title,\r\n       done:false\r\n      };\r\n      setTodos([...todos,todo]);\r\n  }\r\n\r\n  const removeTodo = (todo:Todo) =>{\r\n    const index = todos.indexOf(todo);\r\n    setTodos(todos.filter((_,i) => i!== index));\r\n  }\r\n\r\n  const toggle = (todo:Todo) =>{\r\n\r\n    const index = todos.indexOf(todo);\r\n    todos[index].done = !todo.done;\r\n    setTodos([...todos]);\r\n  }\r\n\r\nreturn(\r\n  <TodoContext.Provider value={{\r\n    todos,addTodo,removeTodo,toggle\r\n  }}>\r\n    {props.children}\r\n  </TodoContext.Provider>\r\n);\r\n}\r\nexport default TodoProvider;"]},"metadata":{},"sourceType":"module"}